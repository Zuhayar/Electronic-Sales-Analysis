/* Project Case 												*/
/* Script for creating the FAME schema and database Tables      			*/

/* Do Edit->Replace and replace "fame" by "yourinitials_fame"*/
CREATE SCHEMA fame;

CREATE TABLE fame.ADMIN_T
  ( AdminID		    INT(12)    NOT NULL,	
    LastName		  VARCHAR(25)  NOT NULL,	
    FirstName		  VARCHAR(25)  NOT NULL,	
    AManagerID	  INT(12)    NOT NULL,
    CONSTRAINT PK_ADMINT_T PRIMARY KEY (AdminID));

CREATE TABLE fame.AGREEMENT_T
  ( AgreementNbr		    INT(12)    NOT NULL,
    AgreementDate		    DATETIME     NOT NULL,
    GrossAmount		      DECIMAL(12,2)  NOT NULL,
    AtSourceTaxWithheld	DECIMAL(12,2)  NOT NULL,
    EventID             INT(12)    NOT NULL,
    ContractID          INT(12)    NOT NULL,
    CONSTRAINT PK_AGREEMENT_T PRIMARY KEY (AgreementNbr));

CREATE TABLE fame.ARTIST_T
  ( ArtistID		  INT(12)          NOT NULL,
    LastName		  VARCHAR(25)        NOT NULL,
    FirstName		  VARCHAR(25)        NOT NULL,
    Gender		    CHAR(1)             NOT NULL,
    YearOfBirth		INT(4)           NOT NULL,
    Street        VARCHAR(40),
    City          VARCHAR(30),
    State         VARCHAR(2),
    Zip           VARCHAR(9),
    Phone         CHAR(10)            NOT NULL,
    Email         VARCHAR(50)        NOT NULL,
    ArtistType    CHAR(1)             NOT NULL,
    CONSTRAINT CH_ArtistType CHECK
      (ArtistType IN ('C','P')),
    CONSTRAINT PK_ARTIST_T PRIMARY KEY (ArtistID));
    
CREATE TABLE fame.ARTISTCOMMITMENT_T
  ( ACommitmentID	  INT(12)  NOT NULL,
    StartDateTime	  DATETIME   NOT NULL,
    EndDateTime		  DATETIME   ,
    ArtistID		    INT(12)  NOT NULL,
    CommitmentType	CHAR(2)     NOT NULL,
    CONSTRAINT CH_CommitmentType CHECK
      (CommitmentType IN ('PE','PR')),
    CONSTRAINT PK_ARTISTCOMMITMENT_T PRIMARY KEY (ACommitmentID));

CREATE TABLE fame.ARTISTDEGREE_T
  ( ArtistID      INT(12)    NOT NULL,
    DegreeID      INT(12)    NOT NULL,
    DegreeYear    INT(4)     NOT NULL,
    CONSTRAINT CH_DegreeYear CHECK
      (DegreeYear < 2015),
    CONSTRAINT PK_ARTISTDEGREE_T PRIMARY KEY (ArtistID, DegreeID));
  
CREATE TABLE fame.ARTISTEXPENSE_T
  ( ExpenseID    INT(12)    NOT NULL,
    ArtistID     INT(12)    NOT NULL,
    CONSTRAINT PK_ARTISTEXPENSE_T PRIMARY KEY (ExpenseID));

CREATE TABLE fame.ARTISTHONOR_T
  ( ArtistID   INT(12)    NOT NULL,
    HonorID     INT(12)    NOT NULL,
    AHYear      INT(4),
    CONSTRAINT PK_ARTISTHONOR_T PRIMARY KEY (ArtistID, HonorID));    
    
CREATE TABLE fame.ARTISTINSTRUMENT_T
  ( ArtistID      INT(12)    NOT NULL,
    InstrumentID  INT(12)    NOT NULL,
    CONSTRAINT PK_ARTISTINSTRUMENT_T PRIMARY KEY (ArtistID, InstrumentID));

CREATE TABLE fame.ARTISTMANAGER_T
  ( AManagerID		INT(12)    NOT NULL,
    LastName		  VARCHAR(25)  NOT NULL,
    FirstName		  VARCHAR(25)  NOT NULL,
    CONSTRAINT PK_ARTISTMANAGER_T PRIMARY KEY (AManagerID));

CREATE TABLE fame.ARTISTNEWS_T
  ( ArtistID      INT(12)    NOT NULL,
    NewsItemID    INT(12)    NOT NULL,
    CONSTRAINT PK_ARTISTNEWS_T PRIMARY KEY (ArtistID, NewsItemID));
    
CREATE TABLE fame.ARTISTPAYMENT_T
  ( APaymentID    INT(12)    NOT NULL,
    APaymentDate  DATETIME     NOT NULL,
    Amount        DECIMAL(12,2)  NOT NULL,
    ArtistID      INT(12)    NOT NULL,
    AdminID       INT(12)    NOT NULL,
    CONSTRAINT PK_ARTISTPAYMENT_T PRIMARY KEY (APaymentID));
    
CREATE TABLE fame.ARTISTMGREXPENSE_T
  ( ExpenseID    INT(12)    NOT NULL,
    AManagerID   INT(12)    NOT NULL,
    CONSTRAINT PK_ARTISTMGREXPENSE_T PRIMARY KEY (ExpenseID));
    
CREATE TABLE fame.CONTRACT_T
  ( ContractID		INT(12)    NOT NULL,
    StartDate		  DATETIME     NOT NULL,
    EndDate		    DATETIME     ,
    RoyaltyPerc		DECIMAL(4,2)   NOT NULL,
    Terms		    VARCHAR(20)            ,
    ArtistID		  INT(12)    NOT NULL,
    CONSTRAINT PK_CONTRACT_T PRIMARY KEY (ContractID));

CREATE TABLE fame.CONTRACTEDARTIST_T
  ( ArtistID      INT(12)    NOT NULL,
    AManagerID    INT(12)    NOT NULL,
    CONSTRAINT PK_CONTRACTEDARTIST_T PRIMARY KEY (ArtistID));

CREATE TABLE fame.CUSTOMER_T
  ( CustomerID    INT(12)     NOT NULL,
    CustomerName  VARCHAR(100)    NOT NULL,
    Street        VARCHAR(40),
    City          VARCHAR(30),
    State         VARCHAR(2),
    Zip           VARCHAR(9),
    Phone         CHAR(10)       NOT NULL,
    Email         VARCHAR(50)   NOT NULL,
    CONSTRAINT PK_CUSTOMER_T PRIMARY KEY (CustomerID));
    
CREATE TABLE fame.CUSTOMERPAYMENT_T
  ( CPaymentID    INT(12)      NOT NULL,
    CPaymentDate  DATETIME       NOT NULL,
    Amount        DECIMAL(12,2)    NOT NULL,
    CustomerID    INT(12)      NOT NULL,
    CONSTRAINT PK_CUSTOMERPAYMENT_T PRIMARY KEY (CPaymentID));
    
CREATE TABLE fame.DEGREE_T
  ( DegreeID      INT(12)      NOT NULL,
    DegreeName    VARCHAR(100)    NOT NULL,
    University    VARCHAR(50)     NOT NULL,
    CONSTRAINT PK_DEGREE_T PRIMARY KEY (DegreeID));
    
CREATE TABLE fame.EVENT_T
  ( EventID		    INT(12)      NOT NULL,
    EventDesc 		VARCHAR(400)    NOT NULL,
    DateTime		  DATETIME       ,
    VenueID		    INT(12)      NOT NULL,
    CustomerID		INT(12)      NOT NULL,
    CONSTRAINT PK_EVENT_T PRIMARY KEY (EventID));

CREATE TABLE fame.EXPENSE_T
  ( ExpenseID		  INT(12)      NOT NULL,
    Description		VARCHAR(400)   NOT NULL,
    Amount		    DECIMAL(12,2)    NOT NULL,
    AccountNbr		INT(16)      NOT NULL,
    ExpenseType		CHAR(1)         NOT NULL,
    CONSTRAINT CH_ExpenseType CHECK
      (ExpenseType IN ('A','M')),
    CONSTRAINT PK_EXPENSE_T PRIMARY KEY (ExpenseID));
    
CREATE TABLE fame.HONOR_T
  ( HonorID       INT(12)      NOT NULL,
    HonorDesc     VARCHAR(100)   NOT NULL,
    CONSTRAINT PK_HONOR_T PRIMARY KEY (HonorID));

CREATE TABLE fame.INSTRUMENT_T
  ( InstrumentID    INT(12)    NOT NULL,
    InstrumentName  VARCHAR(50)  NOT NULL,
    CONSTRAINT PK_INSTRUMENT_T PRIMARY KEY (InstrumentID));

CREATE TABLE fame.INVOICE_T
  ( InvoiceNbr      INT(12)    NOT NULL,
    InvoiceDate     DATETIME     NOT NULL,
    Total           DECIMAL(12,2)  NOT NULL,
    CONSTRAINT PK_INVOICE_T PRIMARY KEY (InvoiceNbr));

CREATE TABLE fame.AGREEMENTINVOICE_T
  ( AgreementNbr    INT(12)    NOT NULL,
    InvoiceNbr      INT(12)    NOT NULL,
    Amount          DECIMAL(12,2)  NOT NULL,
    CONSTRAINT PK_AGREEMENTINVOICE_T PRIMARY KEY (AgreementNbr,InvoiceNbr));
    
CREATE TABLE fame.INVOICEPAYMENT_T
  ( InvoiceNbr      INT(12)    NOT NULL,
    CPaymentID       INT(12)    NOT NULL,
    Amount          DECIMAL(12,2)  NOT NULL,
    CONSTRAINT PK_INVOICEPAYMENT_T PRIMARY KEY (InvoiceNbr, CPaymentID));

CREATE TABLE fame.NEWSITEM_T
  ( NewsItemID      INT(12)      NOT NULL,
    NewsItemSource  VARCHAR(100)   NOT NULL,
    NewsItemDate    DATETIME       NOT NULL,
    NewsItemSummary VARCHAR(4000)  NOT NULL,
    NewsItemContent VARCHAR(4000),            
    CONSTRAINT PK_NEWSITEM_T PRIMARY KEY (NewsItemID));
    
CREATE TABLE fame.PERSONALC_T
  ( ACommitmentID   INT(12)    NOT NULL,
    Firmness        CHAR(1)       NOT NULL,
    CONSTRAINT CH_Firmness CHECK (Firmness IN ('F','N')),
    CONSTRAINT PK_PERSONALC_T PRIMARY KEY (ACommitmentID));

CREATE TABLE fame.PERFORMANCERELATEDC_T
  ( ACommitmentID     INT(12)    NOT NULL,
    PRCCategory       CHAR(1)       NOT NULL,
    EventID           INT(12)    NOT NULL,
    CONSTRAINT CH_PRCCategory CHECK (PRCCategory IN ('P','R','T')),
    CONSTRAINT PK_PERFORMANCERELATED_T PRIMARY KEY (ACommitmentID));
    
CREATE TABLE fame.PROSPECTIVEARTIST_T
  ( ArtistID          INT(12)    NOT NULL,
    CONSTRAINT PK_PROSPECTIVEARTIST_T PRIMARY KEY (ArtistID));
   
CREATE TABLE fame.RECOMMENDATION_T
  ( RecommendationID		INT(12)      NOT NULL,
    RecSummary		      VARCHAR(1000)  NOT NULL,
    QualityEvaluation		VARCHAR(500)   NOT NULL,
    ReceivedDate		    DATETIME       NOT NULL,
    CreatedDate		      DATETIME       NOT NULL,
    ArtistID		        INT(12)      NOT NULL,
    SourceID		        INT(12)      NOT NULL,
    CONSTRAINT PK_RECOMMENDATION_T PRIMARY KEY (RecommendationID));

CREATE TABLE fame.SAMPLE_T
  ( SampleID      INT(12)    NOT NULL,
    SampleContent VARCHAR(4000) NOT NULL,
    ArtistID      INT(12)    NOT NULL,
    CONSTRAINT PK_SAMPLE_T PRIMARY KEY (SampleID));
    
CREATE TABLE fame.SOURCE_T
  ( SourceID		  INT(12)    NOT NULL,
    SourceName		VARCHAR(50)  NOT NULL,
    SourceType		VARCHAR(20)  NOT NULL,
    Quality		    DECIMAL(2,0)   NOT NULL,
    CONSTRAINT CH_SOURCE_Quality CHECK
      (Quality BETWEEN 0 AND 10),
    CONSTRAINT PK_SOURCE_T PRIMARY KEY (SourceID));

CREATE TABLE fame.VENUE_T
  ( VenueID       INT(12)    NOT NULL,
    VenueName     VARCHAR(50)  NOT NULL,
    Street        VARCHAR(40),
    City          VARCHAR(30),
    State         VARCHAR(2),
    Zip           VARCHAR(9),
    Phone         CHAR(10)       NOT NULL,
    Country       VARCHAR(50),
    CONSTRAINT PK_VENUE_T PRIMARY KEY (VenueID));
 
/*
ALTER TABLE ADMIN_T
  ADD CONSTRAINT FK_ADMIN_AManagerID FOREIGN KEY (AManagerID)
    REFERENCES ARTISTMANAGER_T(AManagerID);
    
ALTER TABLE AGREEMENT_T
  ADD CONSTRAINT FK_AGREEMENT_EventID FOREIGN KEY (EventID)
    REFERENCES EVENT_T (EventID);
ALTER TABLE AGREEMENT_T
  ADD CONSTRAINT FK_AGREEMENT_ContractID FOREIGN KEY (ContractID)
    REFERENCES CONTRACT_T (ContractID);

ALTER TABLE ARTISTCOMMITMENT_T
  ADD CONSTRAINT FK_ARTISTCOMMITMENT_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES CONTRACTEDARTIST_T (ArtistID);
    
ALTER TABLE ARTISTDEGREE_T
  ADD CONSTRAINT FK_ARTISTDEGREE_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES ARTIST_T (ArtistID);
ALTER TABLE ARTISTDEGREE_T
  ADD CONSTRAINT FK_ARTISTDEGREE_DegreeID FOREIGN KEY (DegreeID)
    REFERENCES DEGREE_T (DegreeID);
    
ALTER TABLE ARTISTEXPENSE_T
  ADD CONSTRAINT FK_ARTISTEXPENSE_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES CONTRACTEDARTIST_T (ArtistID);
ALTER TABLE ARTISTEXPENSE_T
  ADD CONSTRAINT FK_ARTISTEXPENSE_ExpenseID FOREIGN KEY (ExpenseID)
    REFERENCES EXPENSE_T (ExpenseID);
    
ALTER TABLE ARTISTHONOR_T
  ADD CONSTRAINT FK_ARTISTHONOR_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES ARTIST_T (ArtistID);
ALTER TABLE ARTISTHONOR_T
  ADD CONSTRAINT FK_ARTISTHONOR_HonorID FOREIGN KEY (HonorID)
    REFERENCES HONOR_T (HonorID);

ALTER TABLE ARTISTINSTRUMENT_T
  ADD CONSTRAINT FK_ARTISTINSTRUMENT_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES ARTIST_T (ArtistID);
ALTER TABLE ARTISTINSTRUMENT_T    
  ADD CONSTRAINT FK_ARTISTINSTRUMENT_InstrID FOREIGN KEY (InstrumentID)
    REFERENCES INSTRUMENT_T (InstrumentID);

ALTER TABLE ARTISTNEWS_T
  ADD CONSTRAINT FK_ARTISTNEWS_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES ARTIST_T (ArtistID);
ALTER TABLE ARTISTNEWS_T
  ADD CONSTRAINT FK_ARTISTNEWS_NewsItemID FOREIGN KEY (NewsItemID)
    REFERENCES NEWSITEM_T (NewsItemID);
    
ALTER TABLE ARTISTPAYMENT_T
  ADD CONSTRAINT FK_ARTISTPAYMENT_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES CONTRACTEDARTIST_T (ArtistID);
ALTER TABLE ARTISTPAYMENT_T
  ADD CONSTRAINT FK_ARTISTPAYMENT_AdminID FOREIGN KEY (AdminID)
    REFERENCES ADMIN_T (AdminID);
    
ALTER TABLE ARTISTMGREXPENSE_T
  ADD CONSTRAINT FK_ARTISTMGREXPENSE_AManagerID FOREIGN KEY (AManagerID)
    REFERENCES ARTISTMANAGER_T (AManagerID);
ALTER TABLE ARTISTMGREXPENSE_T
  ADD CONSTRAINT FK_ARTISMGRTEXPENSE_ExpenseID FOREIGN KEY (ExpenseID)
    REFERENCES EXPENSE_T (ExpenseID);
    
ALTER TABLE CONTRACT_T
  ADD CONSTRAINT FK_CONTRACT_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES CONTRACTEDARTIST_T (ArtistID);
    
ALTER TABLE CONTRACTEDARTIST_T
  ADD CONSTRAINT FK_CONTRACTEDARTIST_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES ARTIST_T (ArtistID);
ALTER TABLE CONTRACTEDARTIST_T
  ADD CONSTRAINT FK_CONTRACTEDARTIST_AManagerID FOREIGN KEY (AManagerID)
    REFERENCES ARTISTMANAGER_T (AManagerID);

ALTER TABLE CUSTOMERPAYMENT_T
  ADD CONSTRAINT FK_CUSTOMERPAYMENT_CustomerID FOREIGN KEY (CustomerID)
    REFERENCES CUSTOMER_T (CustomerID);
    
ALTER TABLE EVENT_T
  ADD CONSTRAINT FK_EVENT_VenueID FOREIGN KEY (VenueID)
    REFERENCES VENUE_T (VenueID);
ALTER TABLE EVENT_T  
  ADD CONSTRAINT FK_EVENT_CustomerID FOREIGN KEY (CustomerID)
    REFERENCES CUSTOMER_T (CustomerID);

ALTER TABLE INVOICEPAYMENT_T
  ADD CONSTRAINT FK_INVOICEPAYMENT_InvoiceNbr FOREIGN KEY (InvoiceNbr)
    REFERENCES INVOICE_T (InvoiceNbr);
ALTER TABLE INVOICEPAYMENT_T
  ADD CONSTRAINT FK_INVOICEPAYMENT_CPaymentID FOREIGN KEY (CPaymentID)
    REFERENCES CUSTOMERPAYMENT_T (CPaymentID);

ALTER TABLE AGREEMENTINVOICE_T
  ADD CONSTRAINT FK_AGREEMENTINVOICE_InvNbr FOREIGN KEY (InvoiceNbr)
    REFERENCES INVOICE_T (InvoiceNbr);
ALTER TABLE AGREEMENTINVOICE_T
  ADD CONSTRAINT FK_AGREEMENTINVOICE_AgrID FOREIGN KEY (AgreementNbr)
    REFERENCES AGREEMENT_T (AgreementNbr);
    
ALTER TABLE PERSONALC_T
  ADD CONSTRAINT FK_PERSONALC_ACommitmentID FOREIGN KEY (ACommitmentID)
    REFERENCES ARTISTCOMMITMENT_T (ACommitmentID);

ALTER TABLE PERFORMANCERELATEDC_T
  ADD CONSTRAINT FK_PERFRELATEDC_ACommitmentID FOREIGN KEY (ACommitmentID)
    REFERENCES ARTISTCOMMITMENT_T (ACommitmentID);
ALTER TABLE PERFORMANCERELATEDC_T
  ADD CONSTRAINT FK_PERFRELATEDC_EventID FOREIGN KEY (EventID)
    REFERENCES EVENT_T (EventID);

/*
ALTER TABLE PROSPECTIVEARTIST_T
  ADD CONSTRAINT FK_PROSPARTIST_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES PROSPECTIVEARTIST_T (ArtistID);


ALTER TABLE RECOMMENDATION_T
  ADD CONSTRAINT FK_RECOMMENDATION_ArtistID FOREIGN KEY (ArtistID)
    REFERENCES PROSPECTIVEARTIST_T (ArtistID);
ALTER TABLE RECOMMENDATION_T
  ADD CONSTRAINT FK_RECOMMENDATION_SourceID FOREIGN KEY (SourceID)
    REFERENCES SOURCE_T (SourceID);
*/

